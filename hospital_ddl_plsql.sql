BEGIN

  EXECUTE IMMEDIATE q'[
    CREATE TABLE department (
      dept_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      dept_name  VARCHAR2(20 CHAR) NOT NULL
    )
  ]';


  EXECUTE IMMEDIATE q'[
    CREATE TABLE patient (
      patient_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      full_name  VARCHAR2(20 CHAR) NOT NULL,
      birth_dt   DATE NOT NULL,
      gender     CHAR(1) NOT NULL,
      address    VARCHAR2(200 CHAR),
      CONSTRAINT ck_patient_gender CHECK (gender IN ('M','F'))
    )
  ]';


  EXECUTE IMMEDIATE q'[
    CREATE TABLE provider (
      provider_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      provider_name VARCHAR2(20 CHAR) NOT NULL,
      dept_id       NUMBER,
      CONSTRAINT fk_provider_dept
        FOREIGN KEY (dept_id) REFERENCES department(dept_id)
    )
  ]';


  EXECUTE IMMEDIATE q'[
    CREATE TABLE appointment (
      appt_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      patient_id  NUMBER NOT NULL,
      provider_id NUMBER NOT NULL,
      appt_dt     TIMESTAMP(6) NOT NULL,
      cancel_yn   CHAR(1) DEFAULT 'N' NOT NULL,
      cancel_dt   TIMESTAMP(6),
      
      CONSTRAINT fk_appt_patient  FOREIGN KEY (patient_id)  REFERENCES patient(patient_id),
      CONSTRAINT fk_appt_provider FOREIGN KEY (provider_id) REFERENCES provider(provider_id),
      
      CONSTRAINT uq_appt_pid_prv_appt UNIQUE (patient_id, provider_id, appt_id),
      
      CONSTRAINT ck_appt_cancel_state CHECK (
        (cancel_yn = 'N' AND cancel_dt IS NULL) OR
        (cancel_yn = 'Y' AND cancel_dt IS NOT NULL)
      ),
      CONSTRAINT ck_appt_cancel_yn CHECK (cancel_yn IN ('Y','N')),
      
      CONSTRAINT ck_appt_cancel_dt_valid CHECK (
          cancel_dt IS NULL
          OR cancel_dt <= appt_dt                           
      ),
      
      -- 예약 시각은 정확히 정각/30분만 허용
      CONSTRAINT ck_appt_dt_30m_exact CHECK (
          appt_dt = CAST(TRUNC(appt_dt, 'MI') AS TIMESTAMP)      
          AND MOD(EXTRACT(MINUTE FROM appt_dt), 30) = 0         
      )
    
    )
  ]';

      EXECUTE IMMEDIATE q'[CREATE UNIQUE INDEX ux_appt_provider_slot_30m
      ON appointment (provider_id, CASE WHEN cancel_yn = 'N' THEN appt_dt END)]';
  
     EXECUTE IMMEDIATE 'CREATE INDEX ix_appt_patient ON appointment(patient_id)';
 
        
     EXECUTE IMMEDIATE q'[
      CREATE TABLE encounter (
        encounter_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        patient_id     NUMBER NOT NULL,
        provider_id    NUMBER NOT NULL,
        encounter_type CHAR(2) NOT NULL,     -- 'OP' or 'IP'
        visit_dt       TIMESTAMP(6) NOT NULL, -- OP/IP 공통 방문(도착) 시각
        admit_dt       TIMESTAMP(6),          -- IP 전용
        discharge_dt   TIMESTAMP(6),          -- IP 전용 (NULL=입원중)
        appt_id        NUMBER NOT NULL,       -- OP/IP 모두 예약과 연결
      
        CONSTRAINT fk_enc_patient  FOREIGN KEY (patient_id)  REFERENCES patient(patient_id),
        CONSTRAINT fk_enc_provider FOREIGN KEY (provider_id) REFERENCES provider(provider_id),
      
        CONSTRAINT fk_enc_appt_tuple FOREIGN KEY (patient_id, provider_id, appt_id) REFERENCES appointment (patient_id, provider_id, appt_id),
     
     
        CONSTRAINT ck_enc_type CHECK (encounter_type IN ('OP','IP')),
    
        --  OP: admit/discharge(입원/퇴원)는 NULL
        --  IP: admit는 NOT NULL, discharge는 NULL 또는 admit 이후 (입원은 not null, 퇴원은 null또는 입원시각 이후)
        
        CONSTRAINT ck_enc_time_shape CHECK (
          (encounter_type='OP' AND admit_dt IS NULL AND discharge_dt IS NULL)
          OR
          (encounter_type='IP' AND admit_dt IS NOT NULL
             AND (discharge_dt IS NULL OR discharge_dt >= admit_dt))
        ),
    
        -- 한 예약당 Encounter 1건(OP/IP : 1:1)
        CONSTRAINT uq_enc_appt UNIQUE (appt_id),
        CONSTRAINT uq_enc_patient_encounter UNIQUE (patient_id, encounter_id)
      )
    ]';
    EXECUTE IMMEDIATE 'CREATE INDEX ix_enc_pid_prv_appt ON encounter (patient_id, provider_id, appt_id)';
    EXECUTE IMMEDIATE 'CREATE INDEX ix_enc_pat_type ON encounter (patient_id, encounter_type)';
    


    
    EXECUTE IMMEDIATE q'[
    CREATE TABLE patient_event (
      event_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      patient_id   NUMBER NOT NULL,
      encounter_id NUMBER NOT NULL,
      event_dt     TIMESTAMP(6) NOT NULL,
      event_type   VARCHAR2(20 CHAR) NOT NULL,
      note         VARCHAR2(1000 CHAR),
      CONSTRAINT fk_evt_patient_enc
        FOREIGN KEY (patient_id, encounter_id)
        REFERENCES encounter (patient_id, encounter_id),
        
      CONSTRAINT ck_evt_type CHECK (event_type IN ('처방','수술','투약','검사'))
    )
    ]';
    
    EXECUTE IMMEDIATE 'CREATE INDEX ix_evt_enc_dt ON patient_event(encounter_id, event_dt DESC)';
    EXECUTE IMMEDIATE 'CREATE INDEX ix_evt_pat_dt ON patient_event(patient_id, event_dt DESC)';
    EXECUTE IMMEDIATE 'CREATE INDEX ix_evt_type_enc_dt ON patient_event(event_type, encounter_id, event_dt DESC)';
    EXECUTE IMMEDIATE 'CREATE INDEX ix_evt_fk_pat_enc  ON patient_event(patient_id, encounter_id)';


  EXECUTE IMMEDIATE q'[
    CREATE TABLE patient_history (
      hist_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      patient_id  NUMBER NOT NULL,
      action      VARCHAR2(10 CHAR) NOT NULL,
      changed_at  TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
      old_values  VARCHAR2(500 CHAR),
      new_values  VARCHAR2(500 CHAR),
      CONSTRAINT ck_ph_action  CHECK (action IN ('INSERT','UPDATE','DELETE'))
    )
  ]';

  EXECUTE IMMEDIATE 'CREATE INDEX ix_ph_pat_time ON patient_history(patient_id, changed_at DESC)';

END;
/

